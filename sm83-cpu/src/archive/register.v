/**
 * This is an autogenerated netlist code from CircuitVerse. Verilog Code can be
 * tested on https://www.edaplayground.com/ using Icarus Verilog 0.9.7. This is an
 * experimental module and some manual changes may need to be done in order for
 * this to work.
 *
 * If you have any ideas/suggestions or bug fixes, raise an issue
 * on https://github.com/CircuitVerse/CircuitVerse/issues/new/choose
 */


module register(data, wr, rst, clk, oe);
    parameter WIDTH = 8;
    inout[WIDTH-1:0] data;
    input wr, rst, clk, oe;
    wire [WIDTH-1:0] DflipFlop_0_Q;
    assign data = (oe!=0) ? DflipFlop_0_Q : 'b?;
    DflipFlop #(WIDTH) DflipFlop_0(DflipFlop_0_Q, , clk, data, rst, , wr);
endmodule

module DflipFlop(q, q_inv, clk, d, a_rst, pre, en);
    parameter WIDTH = 1;
    output reg [WIDTH-1:0] q, q_inv;
    input clk, a_rst, pre, en;
    input [WIDTH-1:0] d;

    always @ (posedge clk or posedge a_rst)
    if (a_rst) begin
        q <= 'b0;
        q_inv <= 'b1;
    end else if (en == 0) ;
    else begin
        q <= d;
        q_inv <= ~d;
    end
endmodule